// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Content existing member redirects to membership page 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Content
    doEverything={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(GridWrapper)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        spacing={24}
>
        <WithStyles(GridWrapper)
                item={true}
                xs={4}
        >
                <WithStyles(Paper)
                        className="paper"
                >
                        <h3>
                                Re-order eggs
                        </h3>
                        <WithStyles(Button)
                                className="button"
                                color="primary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                        >
                                Rating: High to Low
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                className="divider"
                                light={true}
                        />
                        <WithStyles(Button)
                                className="button"
                                color="primary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                        >
                                Rating: Low to high
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                className="divider"
                                light={true}
                        />
                        <WithStyles(Button)
                                className="button"
                                color="secondary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                        >
                                Alphabetically
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                className="divider"
                                light={true}
                        />
                        <WithStyles(Button)
                                className="button"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                        >
                                Get fresh eggs
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                className="divider"
                                light={true}
                        />
                        <WithStyles(Button)
                                className="button"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                        >
                                Get Savoury only
                        </WithStyles(Button)>
                </WithStyles(Paper)>
        </WithStyles(GridWrapper)>
        <WithStyles(GridWrapper)
                item={true}
                xs={8}
        >
                <WithStyles(Paper)
                        className="paper"
                >
                        <h3>
                                Scrambled eggs
                        </h3>
                        <EggWrapper
                                display="initialState"
                                eggs={undefined}
                        />
                </WithStyles(Paper)>
        </WithStyles(GridWrapper)>
</WithStyles(GridWrapper)>,
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alignItems": "flex-start",
        "children": Array [
          <WithStyles(GridWrapper)
            item={true}
            xs={4}
>
            <WithStyles(Paper)
                        className="paper"
            >
                        <h3>
                                    Re-order eggs
                        </h3>
                        <WithStyles(Button)
                                    className="button"
                                    color="primary"
                                    fullWidth={true}
                                    onClick={[Function]}
                                    variant="raised"
                        >
                                    Rating: High to Low
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                    className="divider"
                                    light={true}
                        />
                        <WithStyles(Button)
                                    className="button"
                                    color="primary"
                                    fullWidth={true}
                                    onClick={[Function]}
                                    variant="raised"
                        >
                                    Rating: Low to high
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                    className="divider"
                                    light={true}
                        />
                        <WithStyles(Button)
                                    className="button"
                                    color="secondary"
                                    fullWidth={true}
                                    onClick={[Function]}
                                    variant="raised"
                        >
                                    Alphabetically
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                    className="divider"
                                    light={true}
                        />
                        <WithStyles(Button)
                                    className="button"
                                    fullWidth={true}
                                    onClick={[Function]}
                                    variant="raised"
                        >
                                    Get fresh eggs
                        </WithStyles(Button)>
                        <WithStyles(Divider)
                                    className="divider"
                                    light={true}
                        />
                        <WithStyles(Button)
                                    className="button"
                                    fullWidth={true}
                                    onClick={[Function]}
                                    variant="raised"
                        >
                                    Get Savoury only
                        </WithStyles(Button)>
            </WithStyles(Paper)>
</WithStyles(GridWrapper)>,
          <WithStyles(GridWrapper)
            item={true}
            xs={8}
>
            <WithStyles(Paper)
                        className="paper"
            >
                        <h3>
                                    Scrambled eggs
                        </h3>
                        <EggWrapper
                                    display="initialState"
                                    eggs={undefined}
                        />
            </WithStyles(Paper)>
</WithStyles(GridWrapper)>,
        ],
        "container": true,
        "direction": "row",
        "justify": "flex-start",
        "spacing": 24,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Paper)
              className="paper"
>
              <h3>
                            Re-order eggs
              </h3>
              <WithStyles(Button)
                            className="button"
                            color="primary"
                            fullWidth={true}
                            onClick={[Function]}
                            variant="raised"
              >
                            Rating: High to Low
              </WithStyles(Button)>
              <WithStyles(Divider)
                            className="divider"
                            light={true}
              />
              <WithStyles(Button)
                            className="button"
                            color="primary"
                            fullWidth={true}
                            onClick={[Function]}
                            variant="raised"
              >
                            Rating: Low to high
              </WithStyles(Button)>
              <WithStyles(Divider)
                            className="divider"
                            light={true}
              />
              <WithStyles(Button)
                            className="button"
                            color="secondary"
                            fullWidth={true}
                            onClick={[Function]}
                            variant="raised"
              >
                            Alphabetically
              </WithStyles(Button)>
              <WithStyles(Divider)
                            className="divider"
                            light={true}
              />
              <WithStyles(Button)
                            className="button"
                            fullWidth={true}
                            onClick={[Function]}
                            variant="raised"
              >
                            Get fresh eggs
              </WithStyles(Button)>
              <WithStyles(Divider)
                            className="divider"
                            light={true}
              />
              <WithStyles(Button)
                            className="button"
                            fullWidth={true}
                            onClick={[Function]}
                            variant="raised"
              >
                            Get Savoury only
              </WithStyles(Button)>
</WithStyles(Paper)>,
            "item": true,
            "xs": 4,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <h3>
                  Re-order eggs
</h3>,
                <WithStyles(Button)
                  className="button"
                  color="primary"
                  fullWidth={true}
                  onClick={[Function]}
                  variant="raised"
>
                  Rating: High to Low
</WithStyles(Button)>,
                <WithStyles(Divider)
                  className="divider"
                  light={true}
/>,
                <WithStyles(Button)
                  className="button"
                  color="primary"
                  fullWidth={true}
                  onClick={[Function]}
                  variant="raised"
>
                  Rating: Low to high
</WithStyles(Button)>,
                <WithStyles(Divider)
                  className="divider"
                  light={true}
/>,
                <WithStyles(Button)
                  className="button"
                  color="secondary"
                  fullWidth={true}
                  onClick={[Function]}
                  variant="raised"
>
                  Alphabetically
</WithStyles(Button)>,
                <WithStyles(Divider)
                  className="divider"
                  light={true}
/>,
                <WithStyles(Button)
                  className="button"
                  fullWidth={true}
                  onClick={[Function]}
                  variant="raised"
>
                  Get fresh eggs
</WithStyles(Button)>,
                <WithStyles(Divider)
                  className="divider"
                  light={true}
/>,
                <WithStyles(Button)
                  className="button"
                  fullWidth={true}
                  onClick={[Function]}
                  variant="raised"
>
                  Get Savoury only
</WithStyles(Button)>,
              ],
              "className": "paper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Re-order eggs",
                },
                "ref": null,
                "rendered": "Re-order eggs",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Rating: High to Low",
                  "className": "button",
                  "color": "primary",
                  "fullWidth": true,
                  "onClick": [Function],
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Rating: High to Low",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "divider",
                  "light": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Rating: Low to high",
                  "className": "button",
                  "color": "primary",
                  "fullWidth": true,
                  "onClick": [Function],
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Rating: Low to high",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "divider",
                  "light": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Alphabetically",
                  "className": "button",
                  "color": "secondary",
                  "fullWidth": true,
                  "onClick": [Function],
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Alphabetically",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "divider",
                  "light": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Get fresh eggs",
                  "className": "button",
                  "fullWidth": true,
                  "onClick": [Function],
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Get fresh eggs",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "divider",
                  "light": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Get Savoury only",
                  "className": "button",
                  "fullWidth": true,
                  "onClick": [Function],
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Get Savoury only",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              false,
              false,
              <WithStyles(Paper)
                className="paper"
>
                <h3>
                                Scrambled eggs
                </h3>
                <EggWrapper
                                display="initialState"
                                eggs={undefined}
                />
</WithStyles(Paper)>,
              undefined,
              undefined,
            ],
            "item": true,
            "xs": 8,
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <h3>
                    Scrambled eggs
</h3>,
                  <EggWrapper
                    display="initialState"
                    eggs={undefined}
/>,
                ],
                "className": "paper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Scrambled eggs",
                  },
                  "ref": null,
                  "rendered": "Scrambled eggs",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "display": "initialState",
                    "eggs": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            undefined,
            undefined,
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(GridWrapper)
          alignItems="flex-start"
          container={true}
          direction="row"
          justify="flex-start"
          spacing={24}
>
          <WithStyles(GridWrapper)
                    item={true}
                    xs={4}
          >
                    <WithStyles(Paper)
                              className="paper"
                    >
                              <h3>
                                        Re-order eggs
                              </h3>
                              <WithStyles(Button)
                                        className="button"
                                        color="primary"
                                        fullWidth={true}
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Rating: High to Low
                              </WithStyles(Button)>
                              <WithStyles(Divider)
                                        className="divider"
                                        light={true}
                              />
                              <WithStyles(Button)
                                        className="button"
                                        color="primary"
                                        fullWidth={true}
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Rating: Low to high
                              </WithStyles(Button)>
                              <WithStyles(Divider)
                                        className="divider"
                                        light={true}
                              />
                              <WithStyles(Button)
                                        className="button"
                                        color="secondary"
                                        fullWidth={true}
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Alphabetically
                              </WithStyles(Button)>
                              <WithStyles(Divider)
                                        className="divider"
                                        light={true}
                              />
                              <WithStyles(Button)
                                        className="button"
                                        fullWidth={true}
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Get fresh eggs
                              </WithStyles(Button)>
                              <WithStyles(Divider)
                                        className="divider"
                                        light={true}
                              />
                              <WithStyles(Button)
                                        className="button"
                                        fullWidth={true}
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Get Savoury only
                              </WithStyles(Button)>
                    </WithStyles(Paper)>
          </WithStyles(GridWrapper)>
          <WithStyles(GridWrapper)
                    item={true}
                    xs={8}
          >
                    <WithStyles(Paper)
                              className="paper"
                    >
                              <h3>
                                        Scrambled eggs
                              </h3>
                              <EggWrapper
                                        display="initialState"
                                        eggs={undefined}
                              />
                    </WithStyles(Paper)>
          </WithStyles(GridWrapper)>
</WithStyles(GridWrapper)>,
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "flex-start",
          "children": Array [
            <WithStyles(GridWrapper)
              item={true}
              xs={4}
>
              <WithStyles(Paper)
                            className="paper"
              >
                            <h3>
                                          Re-order eggs
                            </h3>
                            <WithStyles(Button)
                                          className="button"
                                          color="primary"
                                          fullWidth={true}
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Rating: High to Low
                            </WithStyles(Button)>
                            <WithStyles(Divider)
                                          className="divider"
                                          light={true}
                            />
                            <WithStyles(Button)
                                          className="button"
                                          color="primary"
                                          fullWidth={true}
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Rating: Low to high
                            </WithStyles(Button)>
                            <WithStyles(Divider)
                                          className="divider"
                                          light={true}
                            />
                            <WithStyles(Button)
                                          className="button"
                                          color="secondary"
                                          fullWidth={true}
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Alphabetically
                            </WithStyles(Button)>
                            <WithStyles(Divider)
                                          className="divider"
                                          light={true}
                            />
                            <WithStyles(Button)
                                          className="button"
                                          fullWidth={true}
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Get fresh eggs
                            </WithStyles(Button)>
                            <WithStyles(Divider)
                                          className="divider"
                                          light={true}
                            />
                            <WithStyles(Button)
                                          className="button"
                                          fullWidth={true}
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Get Savoury only
                            </WithStyles(Button)>
              </WithStyles(Paper)>
</WithStyles(GridWrapper)>,
            <WithStyles(GridWrapper)
              item={true}
              xs={8}
>
              <WithStyles(Paper)
                            className="paper"
              >
                            <h3>
                                          Scrambled eggs
                            </h3>
                            <EggWrapper
                                          display="initialState"
                                          eggs={undefined}
                            />
              </WithStyles(Paper)>
</WithStyles(GridWrapper)>,
          ],
          "container": true,
          "direction": "row",
          "justify": "flex-start",
          "spacing": 24,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Paper)
                className="paper"
>
                <h3>
                                Re-order eggs
                </h3>
                <WithStyles(Button)
                                className="button"
                                color="primary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                >
                                Rating: High to Low
                </WithStyles(Button)>
                <WithStyles(Divider)
                                className="divider"
                                light={true}
                />
                <WithStyles(Button)
                                className="button"
                                color="primary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                >
                                Rating: Low to high
                </WithStyles(Button)>
                <WithStyles(Divider)
                                className="divider"
                                light={true}
                />
                <WithStyles(Button)
                                className="button"
                                color="secondary"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                >
                                Alphabetically
                </WithStyles(Button)>
                <WithStyles(Divider)
                                className="divider"
                                light={true}
                />
                <WithStyles(Button)
                                className="button"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                >
                                Get fresh eggs
                </WithStyles(Button)>
                <WithStyles(Divider)
                                className="divider"
                                light={true}
                />
                <WithStyles(Button)
                                className="button"
                                fullWidth={true}
                                onClick={[Function]}
                                variant="raised"
                >
                                Get Savoury only
                </WithStyles(Button)>
</WithStyles(Paper)>,
              "item": true,
              "xs": 4,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <h3>
                    Re-order eggs
</h3>,
                  <WithStyles(Button)
                    className="button"
                    color="primary"
                    fullWidth={true}
                    onClick={[Function]}
                    variant="raised"
>
                    Rating: High to Low
</WithStyles(Button)>,
                  <WithStyles(Divider)
                    className="divider"
                    light={true}
/>,
                  <WithStyles(Button)
                    className="button"
                    color="primary"
                    fullWidth={true}
                    onClick={[Function]}
                    variant="raised"
>
                    Rating: Low to high
</WithStyles(Button)>,
                  <WithStyles(Divider)
                    className="divider"
                    light={true}
/>,
                  <WithStyles(Button)
                    className="button"
                    color="secondary"
                    fullWidth={true}
                    onClick={[Function]}
                    variant="raised"
>
                    Alphabetically
</WithStyles(Button)>,
                  <WithStyles(Divider)
                    className="divider"
                    light={true}
/>,
                  <WithStyles(Button)
                    className="button"
                    fullWidth={true}
                    onClick={[Function]}
                    variant="raised"
>
                    Get fresh eggs
</WithStyles(Button)>,
                  <WithStyles(Divider)
                    className="divider"
                    light={true}
/>,
                  <WithStyles(Button)
                    className="button"
                    fullWidth={true}
                    onClick={[Function]}
                    variant="raised"
>
                    Get Savoury only
</WithStyles(Button)>,
                ],
                "className": "paper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Re-order eggs",
                  },
                  "ref": null,
                  "rendered": "Re-order eggs",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Rating: High to Low",
                    "className": "button",
                    "color": "primary",
                    "fullWidth": true,
                    "onClick": [Function],
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Rating: High to Low",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "divider",
                    "light": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Rating: Low to high",
                    "className": "button",
                    "color": "primary",
                    "fullWidth": true,
                    "onClick": [Function],
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Rating: Low to high",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "divider",
                    "light": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Alphabetically",
                    "className": "button",
                    "color": "secondary",
                    "fullWidth": true,
                    "onClick": [Function],
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Alphabetically",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "divider",
                    "light": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Get fresh eggs",
                    "className": "button",
                    "fullWidth": true,
                    "onClick": [Function],
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Get fresh eggs",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "divider",
                    "light": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Get Savoury only",
                    "className": "button",
                    "fullWidth": true,
                    "onClick": [Function],
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Get Savoury only",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                false,
                false,
                false,
                <WithStyles(Paper)
                  className="paper"
>
                  <h3>
                                    Scrambled eggs
                  </h3>
                  <EggWrapper
                                    display="initialState"
                                    eggs={undefined}
                  />
</WithStyles(Paper)>,
                undefined,
                undefined,
              ],
              "item": true,
              "xs": 8,
            },
            "ref": null,
            "rendered": Array [
              false,
              false,
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <h3>
                      Scrambled eggs
</h3>,
                    <EggWrapper
                      display="initialState"
                      eggs={undefined}
/>,
                  ],
                  "className": "paper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Scrambled eggs",
                    },
                    "ref": null,
                    "rendered": "Scrambled eggs",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "display": "initialState",
                      "eggs": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              undefined,
              undefined,
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
